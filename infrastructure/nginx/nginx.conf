worker_processes  1;

events { worker_connections 1024; }

http {
    include       mime.types;
    default_type  application/octet-stream;

    gzip              on;
    gzip_types        application/json text/plain text/css application/javascript;
    gzip_min_length   1000;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    proxy_http_version    1.1;
    proxy_set_header      Host               $host;
    proxy_set_header      X-Real-IP          $remote_addr;
    proxy_set_header      X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header      X-Forwarded-Proto  $scheme;

    upstream spring {
        server host.docker.internal:8080;
        keepalive 32;
    }

    upstream nextjs {
        server host.docker.internal:3000;
        keepalive 32;
    }

    server {
        listen 80;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        ssl_certificate     /etc/nginx/certs/selfsigned.crt;
        ssl_certificate_key /etc/nginx/certs/selfsigned.key;
        ssl_protocols       TLSv1.2 TLSv1.3;

        client_max_body_size    10M;
        send_timeout            15s;
        proxy_connect_timeout   5s;
        proxy_read_timeout      60s;

        location ^~ /api/ {
            proxy_pass http://spring;
            proxy_set_header Connection "";
        }

        location ^~ /ws-chat {
            proxy_pass http://spring;
            proxy_set_header Upgrade   $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }

        location / {
            proxy_pass http://nextjs;
            proxy_set_header Upgrade   $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }
    
    include /etc/nginx/conf.d/*.conf;
}
